# Types
type Warehouse {
  id: ID
  name: String
  description: String
  active: Boolean
}

type Product {
  id: ID
  name: String
  price: Int
  stock: Int
  iva: Int
  description: String
  active: Boolean
  warehouse: ID
}

# Inputs
input WarehouseInput {
  id: ID
  name: String!
  description: String
  active: Boolean!
}

input ProductInput {
  id: ID
  name: String!
  price: Int!
  stock: Int!
  iva: Int!
  description: String!
  active: Boolean!
  warehouse: ID!
}

type Query {
  # Warehouse
  getWarehouse(id: ID!): Warehouse
  getWarehouses(limit: Int, offset: Int): [Warehouse]

  # Product
  getProduct(id: ID!): Product
  getProducts(limit: Int, offset: Int): [Product]
}

type Mutation {
  # Warehouse
  newWarehouse(input: WarehouseInput!): Warehouse
  updateWarehouse(input: WarehouseInput!): Warehouse
  deleteWarehouse(id: ID!): String

  # Product
  newProduct(input: ProductInput!): Product
  updateProduct(input: ProductInput!): Product
  deleteProduct(id: ID!): String
}
